basePath: /api
definitions:
  request.BaseChangePwdReq:
    properties:
      code:
        type: string
      mail:
        maxLength: 100
        minLength: 0
        type: string
    required:
    - code
    - mail
    type: object
  request.BaseSendCodeReq:
    properties:
      mail:
        maxLength: 100
        minLength: 0
        type: string
    required:
    - mail
    type: object
  request.GroupAddReq:
    properties:
      groupName:
        maxLength: 128
        minLength: 1
        type: string
      groupType:
        maxLength: 20
        minLength: 1
        type: string
      parentId:
        description: 父级Id 大于等于0 必填
        minimum: 0
        type: integer
      remark:
        description: 分组的中文描述
        maxLength: 128
        minLength: 0
        type: string
    required:
    - groupName
    - groupType
    type: object
  request.GroupAddUserReq:
    properties:
      groupId:
        type: integer
      userIds:
        items:
          type: integer
        type: array
    required:
    - groupId
    - userIds
    type: object
  request.GroupDeleteReq:
    properties:
      groupIds:
        items:
          type: integer
        type: array
    required:
    - groupIds
    type: object
  request.GroupRemoveUserReq:
    properties:
      groupId:
        type: integer
      userIds:
        items:
          type: integer
        type: array
    required:
    - groupId
    - userIds
    type: object
  request.GroupUpdateReq:
    properties:
      groupName:
        maxLength: 128
        minLength: 1
        type: string
      id:
        type: integer
      remark:
        description: 分组的中文描述
        maxLength: 128
        minLength: 0
        type: string
    required:
    - groupName
    - id
    type: object
  request.RegisterAndLoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.RoleAddReq:
    properties:
      keyword:
        maxLength: 20
        minLength: 1
        type: string
      name:
        maxLength: 20
        minLength: 1
        type: string
      remark:
        maxLength: 100
        minLength: 0
        type: string
      sort:
        maximum: 999
        minimum: 1
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - keyword
    - name
    type: object
  request.RoleDeleteReq:
    properties:
      roleIds:
        items:
          type: integer
        type: array
    required:
    - roleIds
    type: object
  request.RoleUpdateApisReq:
    properties:
      apiIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - apiIds
    - roleId
    type: object
  request.RoleUpdateMenusReq:
    properties:
      menuIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - menuIds
    - roleId
    type: object
  request.RoleUpdateReq:
    properties:
      id:
        type: integer
      keyword:
        maxLength: 20
        minLength: 1
        type: string
      name:
        maxLength: 20
        minLength: 1
        type: string
      remark:
        maxLength: 100
        minLength: 0
        type: string
      sort:
        maximum: 999
        minimum: 1
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - id
    - keyword
    - name
    type: object
  request.SyncDingUserReq:
    type: object
  request.SyncFeiShuUserReq:
    type: object
  request.SyncOpenLdapUserReq:
    type: object
  request.SyncSqlUserReq:
    properties:
      userIds:
        items:
          type: integer
        type: array
    required:
    - userIds
    type: object
  request.SyncWeComUserReq:
    type: object
  request.UserAddReq:
    properties:
      avatar:
        type: string
      departmentId:
        items:
          type: integer
        type: array
      departments:
        maxLength: 512
        minLength: 0
        type: string
      givenName:
        maxLength: 50
        minLength: 0
        type: string
      introduction:
        maxLength: 255
        minLength: 0
        type: string
      jobNumber:
        maxLength: 20
        minLength: 0
        type: string
      mail:
        maxLength: 100
        minLength: 0
        type: string
      mobile:
        type: string
      nickname:
        maxLength: 50
        minLength: 0
        type: string
      password:
        type: string
      position:
        maxLength: 128
        minLength: 0
        type: string
      postalAddress:
        maxLength: 255
        minLength: 0
        type: string
      roleIds:
        items:
          type: integer
        type: array
      source:
        maxLength: 50
        minLength: 0
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
      username:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - departmentId
    - jobNumber
    - mail
    - mobile
    - nickname
    - roleIds
    - username
    type: object
  request.UserChangePwdReq:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  request.UserChangeUserStatusReq:
    properties:
      id:
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - id
    type: object
  request.UserDeleteReq:
    properties:
      userIds:
        items:
          type: integer
        type: array
    required:
    - userIds
    type: object
  request.UserUpdateReq:
    properties:
      avatar:
        type: string
      departmentId:
        items:
          type: integer
        type: array
      departments:
        maxLength: 512
        minLength: 0
        type: string
      givenName:
        maxLength: 50
        minLength: 0
        type: string
      id:
        type: integer
      introduction:
        maxLength: 255
        minLength: 0
        type: string
      jobNumber:
        maxLength: 20
        minLength: 0
        type: string
      mail:
        maxLength: 100
        minLength: 0
        type: string
      mobile:
        type: string
      nickname:
        maxLength: 20
        minLength: 0
        type: string
      position:
        maxLength: 128
        minLength: 0
        type: string
      postalAddress:
        maxLength: 255
        minLength: 0
        type: string
      roleIds:
        items:
          type: integer
        type: array
      source:
        maxLength: 50
        minLength: 0
        type: string
      username:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - departmentId
    - id
    - roleIds
    - username
    type: object
  response.ResponseBody:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
host: 127.0.0.1:8888
info:
  contact:
    email: https://github.com/eryajf/go-ldap-admin
    name: 项目作者：二丫讲梵 、 swagger作者：南宫乘风
    url: https://github.com/eryajf/go-ldap-admin
  description: 基于Go+Vue实现的openLDAP后台管理项目
  termsOfService: https://github.com/eryajf/go-ldap-admin
  title: Go Ldap Admin
  version: "1.0"
paths:
  /base/changePwd:
    post:
      consumes:
      - application/json
      description: 使用邮箱验证码修改密码
      parameters:
      - description: 发送验证码请求数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.BaseChangePwdReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 用户通过邮箱修改密码
      tags:
      - 基础管理
  /base/dashboard:
    get:
      consumes:
      - application/json
      description: 获取系统仪表盘概览数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 获取仪表盘数据
      tags:
      - 基础管理
  /base/decryptpwd:
    get:
      consumes:
      - application/json
      description: 将加密后的密码解密为明文
      parameters:
      - description: 需要解密的加密密码
        in: query
        name: passwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 密码解密
      tags:
      - 基础管理
  /base/encryptpwd:
    get:
      consumes:
      - application/json
      description: 将明文密码加密
      parameters:
      - description: 需要加密的明文密码
        in: query
        name: passwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 密码加密
      tags:
      - 基础管理
  /base/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 用户登录信息账号和密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RegisterAndLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 登录接口 (异常，缺少私钥)
      tags:
      - 基础管理
  /base/logout:
    post:
      consumes:
      - application/json
      description: 用户退出登录
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 退出登录
      tags:
      - 基础管理
  /base/ping:
    get:
      description: 健康检测
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 健康检测
      tags:
      - 基础管理
  /base/refreshToken:
    post:
      consumes:
      - application/json
      description: 使用旧的 Token 获取新的 Token
      parameters:
      - description: Bearer 旧的 Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 刷新 Token
      tags:
      - 基础管理
  /base/sendcode:
    post:
      consumes:
      - application/json
      description: 向指定邮箱发送验证码
      parameters:
      - description: 发送验证码请求数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.BaseSendCodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      summary: 发送验证码
      tags:
      - 基础管理
  /group/add:
    post:
      consumes:
      - application/json
      description: 添加分组记录
      parameters:
      - description: 添加用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GroupAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 添加分组记录
      tags:
      - 分组管理
  /group/adduser:
    post:
      consumes:
      - application/json
      description: 添加用户
      parameters:
      - description: 添加用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GroupAddUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 添加用户
      tags:
      - 分组管理
  /group/delete:
    post:
      consumes:
      - application/json
      description: 删除分组记录
      parameters:
      - description: 删除用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GroupDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 删除分组记录
      tags:
      - 分组管理
  /group/list:
    get:
      consumes:
      - application/json
      description: 获取分组记录列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取分组记录列表
      tags:
      - 分组管理
  /group/removeuser:
    post:
      consumes:
      - application/json
      description: 移除用户
      parameters:
      - description: 移除用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GroupRemoveUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 移除用户
      tags:
      - 分组管理
  /group/syncDingTalkDepts:
    post:
      consumes:
      - application/json
      description: 同步钉钉部门信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步钉钉部门信息
      tags:
      - 分组管理
  /group/syncFeiShuDepts:
    post:
      consumes:
      - application/json
      description: 同步飞书部门信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步飞书部门信息
      tags:
      - 分组管理
  /group/syncOpenLdapDepts:
    post:
      consumes:
      - application/json
      description: 同步原ldap部门信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步原ldap部门信息
      tags:
      - 分组管理
  /group/syncSqlGroups:
    post:
      consumes:
      - application/json
      description: 同步Sql中的分组信息到ldap
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步Sql中的分组信息到ldap
      tags:
      - 分组管理
  /group/syncWeComDepts:
    post:
      consumes:
      - application/json
      description: 同步企业微信部门信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步企业微信部门信息
      tags:
      - 分组管理
  /group/tree:
    get:
      consumes:
      - application/json
      description: 获取分组接口树
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取分组接口树
      tags:
      - 分组管理
  /group/update:
    post:
      consumes:
      - application/json
      description: 更新分组记录
      parameters:
      - description: 更新用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GroupUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新分组记录
      tags:
      - 分组管理
  /group/useringroup:
    get:
      consumes:
      - application/json
      description: 获取分组内用户
      parameters:
      - description: 分组ID
        in: query
        name: groupId
        required: true
        type: integer
      - description: 昵称
        in: query
        name: nickname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取分组内用户
      tags:
      - 分组管理
  /group/usernoingroup:
    get:
      consumes:
      - application/json
      description: 不在分组的用户
      parameters:
      - description: 分组ID
        in: query
        name: groupId
        required: true
        type: integer
      - description: 昵称
        in: query
        name: nickname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 不在分组的用户
      tags:
      - 分组管理
  /role/add:
    post:
      consumes:
      - application/json
      description: 新建角色记录
      parameters:
      - description: 添加角色记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 新建角色记录
      tags:
      - 角色管理
  /role/delete:
    post:
      consumes:
      - application/json
      description: 删除角色记录
      parameters:
      - description: 删除角色记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 删除角色记录
      tags:
      - 角色管理
  /role/getapilist:
    get:
      consumes:
      - application/json
      description: 获取接口列表
      parameters:
      - description: 角色ID
        in: query
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取接口列表
      tags:
      - 角色管理
  /role/getmenulist:
    get:
      consumes:
      - application/json
      description: 获取菜单列表
      parameters:
      - description: 角色ID
        in: query
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取菜单列表
      tags:
      - 角色管理
  /role/list:
    get:
      consumes:
      - application/json
      description: 获取角色记录列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取角色记录列表
      tags:
      - 角色管理
  /role/update:
    post:
      consumes:
      - application/json
      description: 更新角色记录
      parameters:
      - description: 更新角色记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新角色记录
      tags:
      - 角色管理
  /role/updateapis:
    post:
      consumes:
      - application/json
      description: 更新接口
      parameters:
      - description: 更新接口的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleUpdateApisReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新接口
      tags:
      - 角色管理
  /role/updatemenus:
    post:
      consumes:
      - application/json
      description: 更新菜单
      parameters:
      - description: 更新菜单的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleUpdateMenusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - 角色管理
  /user/add:
    post:
      consumes:
      - application/json
      description: 添加用户记录
      parameters:
      - description: 添加用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 添加用户记录
      tags:
      - 用户管理
  /user/changePwd:
    post:
      consumes:
      - application/json
      description: 更新密码
      parameters:
      - description: 更改用户密码的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserChangePwdReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新密码
      tags:
      - 用户管理
  /user/changeUserStatus:
    post:
      consumes:
      - application/json
      description: 更改用户状态
      parameters:
      - description: 更改用户状态的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserChangeUserStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更改用户状态
      tags:
      - 用户管理
  /user/delete:
    post:
      consumes:
      - application/json
      description: 删除用户记录
      parameters:
      - description: 删除用户记录的结构体ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 删除用户记录
      tags:
      - 用户管理
  /user/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取当前登录用户信息
      tags:
      - 用户管理
  /user/list:
    get:
      consumes:
      - application/json
      description: 获取所有用户记录列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 获取所有用户记录列表
      tags:
      - 用户管理
  /user/syncDingTalkUsers:
    post:
      consumes:
      - application/json
      description: 同步钉钉用户信息
      parameters:
      - description: 同步钉钉用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SyncDingUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步钉钉用户信息
      tags:
      - 用户管理
  /user/syncFeiShuUsers:
    post:
      consumes:
      - application/json
      description: 同步飞书用户信息
      parameters:
      - description: 同步飞书用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SyncFeiShuUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步飞书用户信息
      tags:
      - 用户管理
  /user/syncOpenLdapUsers:
    post:
      consumes:
      - application/json
      description: 同步ldap用户信息
      parameters:
      - description: 同步ldap用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SyncOpenLdapUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步ldap用户信息
      tags:
      - 用户管理
  /user/syncSqlUsers:
    post:
      consumes:
      - application/json
      description: 同步sql用户信息到ldap
      parameters:
      - description: 更改用户状态的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SyncSqlUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步sql用户信息到ldap
      tags:
      - 用户管理
  /user/syncWeComUsers:
    post:
      consumes:
      - application/json
      description: 同步企业微信用户信息
      parameters:
      - description: 同步企业微信用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SyncWeComUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 同步企业微信用户信息
      tags:
      - 用户管理
  /user/update:
    post:
      consumes:
      - application/json
      description: 添加用户记录
      parameters:
      - description: 更改用户记录的结构体
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseBody'
      security:
      - ApiKeyAuth: []
      summary: 更新用户记录
      tags:
      - 用户管理
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
